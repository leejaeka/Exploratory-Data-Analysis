set.seed(1003661272)
n=10
n.sim=100
co<-c()
for (i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
co[i]<-coef(model)
}
warnings()
co
# Q1
set.seed(1003661272)
n=10
n.sim=100
b0<-c()
b1<-c()
for (i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
b0[i]<-coef(model)[0]
b1[i]<-coef(model)[1]
}
b0[i]<-coef(model)[0]
b1[i]<-coef(model)[1]
}
b0
b1
# Q1
set.seed(1003661272)
n=10
n.sim=100
b0<-c()
b1<-c()
for (i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
b0[i]<-coef(model)[1]
b1[i]<-coef(model)[2]
}
b0
b1
#Q2
hist(b0)
hist(b1)
#Q2
hist(b0,b1)
# Q1
set.seed(1003661272)
n=10
n.sim=100
modelSim<-c()
b0<-c()
b1<-c()
for (i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
modelSim[i]<-model
b0[i]<-coef(model)[1]
b1[i]<-coef(model)[2]
}
#Q2
hist(b0)
hist(b1)
modelSim
mean(b0)
mean(b1)
for (i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
b0[i]<-coef(model)[1]
b1[i]<-coef(model)[2]
}
se <-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
se[i]<-model[2,2]
}
se <-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
sum<- summary(model)
se[i]<-sum[2,2]
}
se <-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
sum<- summary(model)
se[i]<-sum[,2]
}
se <-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
sum<- summary(model)
se[i]<-sum[2]
}
se
se <-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
sum<- summary(model)
sum
}
model[["coefficients"]][["(Intercept)"]]
# Q1
set.seed(1003661272)
n=10
n.sim=100
b0<-c()
b1<-c()
for (i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
b0[i]<-coef(model)[1]
b1[i]<-coef(model)[2]
}
#Q2
hist(b0)
hist(b1)
#Q3
mean(b0)
mean(b1)
##mean(b0) = 0.5244535
##mean(b1) = 2.031602 Hence compared to actual B0=0.5 and B1=2,
## it is very similiar, and therefore valid.
#Q4
se <-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
sum<- summary(model)
sum
}
se
se <-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
sum<- summary(model)
sum[2,2]
}
#Q4
se <-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
sum<- summary(model)
sum[[2]]
}
#Q4
se <-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
sum<- summary(model)
sum[[2]]
}
# Q1
set.seed(1003661272)
n=10
n.sim=100
b0<-c()
b1<-c()
for (i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
b0[i]<-coef(model)[1]
b1[i]<-coef(model)[2]
}
#Q2
hist(b0)
hist(b1)
#Q3
mean(b0)
mean(b1)
##mean(b0) = 0.5244535
##mean(b1) = 2.031602 Hence compared to actual B0=0.5 and B1=2,
## it is very similiar, and therefore valid.
#Q4
se <-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
sum<- summary(model)
sum[[2]]
}
se
#Q4
ratio<-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
se<-coef(model)[4]
error<-coef(model)[2]-2
ratio[i] <- error/se
}
hist(ratio)
# Q1
set.seed(1003661272)
n=10
n.sim=100
b0<-c()
b1<-c()
for (i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
b0[i]<-coef(model)[1]
b1[i]<-coef(model)[2]
}
#Q2
hist(b0)
hist(b1)
#Q3
mean(b0)
mean(b1)
##mean(b0) = 0.5244535
##mean(b1) = 2.031602 Hence compared to actual B0=0.5 and B1=2,
## it is very similiar, and therefore valid.
#Q4
ratio<-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
se<-coef(model)[4]
error<-coef(model)[2]-2
ratio[i] <- error/se
}
hist(ratio)
ratio<-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
se<-coef(model)[3]
error<-coef(model)[2]-2
ratio[i] <- error/se
}
hist(ratio)
coef(model)
coef(model)[2,2]
coef(model)[,2]
##mean(b1) = 2.031602 Hence compared to actual B0=0.5 and B1=2,
## it is very similiar, and therefore valid.
#Q4
ratio<-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
out<-summary(model)
se<-out$coefficients[2 , 2]
error<-coef(model)[2]-2
ratio[i] <- error/se
}
hist(ratio)
#Q4
ratio<-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
out<-summary(model)
out
se<-out$coefficients[2 , 2]
se
error<-coef(model)[2]-2
ratio[i] <- error/se
}
hist(ratio)
ratio<-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
out<-summary(model)
print(out)
se<-out$coefficients[2 , 2]
print(se)
error<-coef(model)[2]-2
ratio[i] <- error/se
}
hist(ratio)
tSqr<-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
out<-summary(model)
se<-out$coefficients[2 , 2]
error<-coef(model)[2]
tSqr[i] <- (error/se)**2
}
hist(tSqr)
##25
n=25
n.sim=100
for (i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
b0[i]<-coef(model)[1]
b1[i]<-coef(model)[2]
}
hist(b0)
hist(b1)
mean(b0)
mean(b1)
##100
n=100
n.sim=100
for (i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
b0[i]<-coef(model)[1]
b1[i]<-coef(model)[2]
}
hist(b0)
hist(b1)
mean(b0)
mean(b1)
pf$year_joined
pf$year_joined.head
year_joined.bucket <- cut(pf$year_joined, breaks = 4)
# Create a variable called year_joined
# in the pf data frame using the variable
pf$year_joined <- floor(2014-pf$tenure/365)
library(ggplot2)
library(dplyr)
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
setwd('D:/Project/R Scripts/Exploratory-Data-Analysis/Udacity+Facebook')
library(ggplot2)
library(dplyr)
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
# Create a variable called year_joined
# in the pf data frame using the variable
pf$year_joined <- floor(2014-pf$tenure/365)
year_joined.bucket <- cut(pf$year_joined, breaks = 4)
year_joined.bucket
table(year_joined.bucket)
year_joined.bucket <- cut(pf$year_joined, breaks = c(2004,2009,2011,2012,2014))
table(year_joined.bucket)
pf$year_joined.bucket <- cut(pf$year_joined, breaks = c(2004,2009,2011,2012,2014))
table(year_joined.bucket)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(gender))) +
geom_line(aes(color = gender), stat = 'summary', fun.y = median) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(gender), !is.na(year_joined))) +
geom_line(aes(color = gender), stat = 'summary', fun.y = median) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(gender), !is.na(year_joined))) +
geom_line(aes(color = year_joined), stat = 'summary', fun.y=mean) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = mean)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(gender), !is.na(year_joined))) +
geom_line(stat = 'summary', fun.y=mean, linetype= 2) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = mean)
#Subset another dataframe to get friend_count/tenure to get friend rate
friend_rate <- subset(pf$friend_count > 0)/pf$tenure
#Subset another dataframe to get friend_count/tenure to get friend rate
friend_rate <- subset(pf, pf$friend_count > 0)/pf$tenure
#Subset another dataframe to get friend_count/tenure to get friend rate
friend_rate <- pf$friend_count/pf$tenure
median(friend_rate)
mean(friend_rate)
friend_rate
#Subset another dataframe to get friend_count/tenure to get friend rate
no_na <- subset(pf, !is.na(friend_count), !is.na(tenure))
friend_rate <- no_na$friend_count/no_na$tenure
median(friend_rate)
mean(friend_rate)
friend_rate <- no_na$friend_count/no_na$tenure
#Subset another dataframe to get friend_count/tenure to get friend rate
with(subset(pf, tenure>=), summary(friend_count/tenure))
#Subset another dataframe to get friend_count/tenure to get friend rate
with(subset(pf, tenure>=1, summary(friend_count/tenure))
#Subset another dataframe to get friend_count/tenure to get friend rate
with(subset(pf, tenure>=1, summary(friend_count/tenure)))
#Subset another dataframe to get friend_count/tenure to get friend rate
with(subset(pf, tenure>=1, summary(friend_count/tenure)))
#Subset another dataframe to get friend_count/tenure to get friend rate
with(subset(pf, tenure>=1) summary(friend_count/tenure))
#Subset another dataframe to get friend_count/tenure to get friend rate
with(subset(pf, tenure>=1), summary(friend_count/tenure))
ggplot(aes(x = tenure, y = friendships_initiated),
data = subset(pf, tenure>= 1, !is.na(friendships_initiated))) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated/tenure),
data = subset(pf, tenure>= 1, !is.na(friendships_initiated))) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = mean)
ggplot(aes(x = 7 * round(tenure / 7), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_smooth(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = 7 * round(tenure / 7), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_smooth(aes(color = year_joined.bucket))
setwd('D:/Project/R Scripts/Exploratory-Data-Analysis/yogurt')
setwd('D:/Project/R Scripts/Exploratory-Data-Analysis/yogurt')
setwd('D:/Project/R Scripts/Exploratory-Data-Analysis/Udacity+Facebook')
pf <- read.csv('yogurt.tsv', sep = '\t')
setwd('D:/Project/R Scripts/Exploratory-Data-Analysis/Udacity+Facebook')
library(ggplot2)
library(dplyr)
pf <- read.csv('yogurt.tsv', sep = '\t')
pf <- read.csv('yogurt.csv', sep = '\t')
pf <- read.csv('yogurt.csv', sep = '\t')
pf.summarise
summarise(pf)
str(pf)
pf$id <- factor(pf$id)
str(pf)
pf <- read.csv('yogurt.csv', sep = '\t')
yo <- read.csv('yogurt.csv', sep = '\t')
View(yo)
hist(yo)
hist(yo.id)
hist(yo$id)
qplot(data=yo, x=price)
yo <- read.csv('yogurt.csv')
qplot(data=yo, x=price)
qplot(data=yo, x=price, I=pink)
qplot(data=yo, x=price, I='pink')
qplot(data=yo, x=price)
qplot(data=yo, x=price, binwidth=10)
qplot(data=yo, x=price, binwidth=5)
qplot(data=yo, x=price, binwidth=2)
# Create a new variable called all.purchases,
# which gives the total counts of yogurt for
# each observation or household.
yo <- transform(yo, all.purchases = strawberry+blueberry+pina.colada+plain+mixed.berry)
summary(yo$all.purchases)
qplot(data=yo, x=all.purchases)
qplot(data=yo, x=all.purchases, binwithd = 1)
qplot(data=yo, x=all.purchases, binwidth = 1)
qplot(x=price, y=time, data=yo)
qplot(x=price, y=time, data=yo) +
geom_point(alpha=1/20)
qplot(x=price, y=time, data=yo) +
geom_point(alpha=1/20) + scale_y_continuous(log10)
qplot(x=price, y=time, data=yo) +
geom_point(alpha=1/20) + scale_y_continuous(log10())
qplot(x=price, y=time, data=yo) +
geom_jitter(alpha=1/20, shape=21) + scale_y_continuous()
qplot(x=price, y=time, data=yo) +
geom_jitter(alpha=1/20, shape=21)
qplot(x=price, y=time, data=yo) +
geom_jitter(alpha=1/4, shape=21)
ggplot(aes(x=times,y=price),data=yo)+
geom_jitter(alpha=1/4, shape=21)
ggplot(aes(x=time,y=price),data=yo)+
geom_jitter(alpha=1/4, shape=21)
qplot(x=time,y=price,data=yo)+
geom_jitter(alpha=1/4, shape=21)
ggplot(aes(x=time,y=price),data=yo)+
geom_jitter(alpha=1/4, shape=21)

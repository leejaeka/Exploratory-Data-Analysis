hist(model.coefficients[0])
#Q2
hist(model[coefficients][0])
#Q2
hist(model[coefficients])
#Q2
hist(model[0])
#Q2
hist(model[0][0])
#Q2
hist(0.009)
# Q1
set.seed(1003661272)
n=10
n.sim=100
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
#Q2
hist()
sl<-c(1)
sl[1]
sl[0]
set.seed(1003661272)
n=10
n.sim=100
co<-c()
sl<-c()
for (i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
print(coef(model))
}
# Q1
set.seed(1003661272)
n=10
n.sim=100
co<-c()
for (i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
co<-coef(model)
}
co
# Q1
set.seed(1003661272)
n=10
n.sim=100
co<-c()
for (i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
co[i]<-coef(model)
}
warnings()
co
# Q1
set.seed(1003661272)
n=10
n.sim=100
b0<-c()
b1<-c()
for (i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
b0[i]<-coef(model)[0]
b1[i]<-coef(model)[1]
}
b0[i]<-coef(model)[0]
b1[i]<-coef(model)[1]
}
b0
b1
# Q1
set.seed(1003661272)
n=10
n.sim=100
b0<-c()
b1<-c()
for (i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
b0[i]<-coef(model)[1]
b1[i]<-coef(model)[2]
}
b0
b1
#Q2
hist(b0)
hist(b1)
#Q2
hist(b0,b1)
# Q1
set.seed(1003661272)
n=10
n.sim=100
modelSim<-c()
b0<-c()
b1<-c()
for (i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
modelSim[i]<-model
b0[i]<-coef(model)[1]
b1[i]<-coef(model)[2]
}
#Q2
hist(b0)
hist(b1)
modelSim
mean(b0)
mean(b1)
for (i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
b0[i]<-coef(model)[1]
b1[i]<-coef(model)[2]
}
se <-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
se[i]<-model[2,2]
}
se <-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
sum<- summary(model)
se[i]<-sum[2,2]
}
se <-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
sum<- summary(model)
se[i]<-sum[,2]
}
se <-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
sum<- summary(model)
se[i]<-sum[2]
}
se
se <-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
sum<- summary(model)
sum
}
model[["coefficients"]][["(Intercept)"]]
# Q1
set.seed(1003661272)
n=10
n.sim=100
b0<-c()
b1<-c()
for (i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
b0[i]<-coef(model)[1]
b1[i]<-coef(model)[2]
}
#Q2
hist(b0)
hist(b1)
#Q3
mean(b0)
mean(b1)
##mean(b0) = 0.5244535
##mean(b1) = 2.031602 Hence compared to actual B0=0.5 and B1=2,
## it is very similiar, and therefore valid.
#Q4
se <-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
sum<- summary(model)
sum
}
se
se <-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
sum<- summary(model)
sum[2,2]
}
#Q4
se <-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
sum<- summary(model)
sum[[2]]
}
#Q4
se <-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
sum<- summary(model)
sum[[2]]
}
# Q1
set.seed(1003661272)
n=10
n.sim=100
b0<-c()
b1<-c()
for (i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
b0[i]<-coef(model)[1]
b1[i]<-coef(model)[2]
}
#Q2
hist(b0)
hist(b1)
#Q3
mean(b0)
mean(b1)
##mean(b0) = 0.5244535
##mean(b1) = 2.031602 Hence compared to actual B0=0.5 and B1=2,
## it is very similiar, and therefore valid.
#Q4
se <-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
sum<- summary(model)
sum[[2]]
}
se
#Q4
ratio<-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
se<-coef(model)[4]
error<-coef(model)[2]-2
ratio[i] <- error/se
}
hist(ratio)
# Q1
set.seed(1003661272)
n=10
n.sim=100
b0<-c()
b1<-c()
for (i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
b0[i]<-coef(model)[1]
b1[i]<-coef(model)[2]
}
#Q2
hist(b0)
hist(b1)
#Q3
mean(b0)
mean(b1)
##mean(b0) = 0.5244535
##mean(b1) = 2.031602 Hence compared to actual B0=0.5 and B1=2,
## it is very similiar, and therefore valid.
#Q4
ratio<-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
se<-coef(model)[4]
error<-coef(model)[2]-2
ratio[i] <- error/se
}
hist(ratio)
ratio<-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
se<-coef(model)[3]
error<-coef(model)[2]-2
ratio[i] <- error/se
}
hist(ratio)
coef(model)
coef(model)[2,2]
coef(model)[,2]
##mean(b1) = 2.031602 Hence compared to actual B0=0.5 and B1=2,
## it is very similiar, and therefore valid.
#Q4
ratio<-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
out<-summary(model)
se<-out$coefficients[2 , 2]
error<-coef(model)[2]-2
ratio[i] <- error/se
}
hist(ratio)
#Q4
ratio<-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
out<-summary(model)
out
se<-out$coefficients[2 , 2]
se
error<-coef(model)[2]-2
ratio[i] <- error/se
}
hist(ratio)
ratio<-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
out<-summary(model)
print(out)
se<-out$coefficients[2 , 2]
print(se)
error<-coef(model)[2]-2
ratio[i] <- error/se
}
hist(ratio)
tSqr<-c()
for(i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
out<-summary(model)
se<-out$coefficients[2 , 2]
error<-coef(model)[2]
tSqr[i] <- (error/se)**2
}
hist(tSqr)
##25
n=25
n.sim=100
for (i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
b0[i]<-coef(model)[1]
b1[i]<-coef(model)[2]
}
hist(b0)
hist(b1)
mean(b0)
mean(b1)
##100
n=100
n.sim=100
for (i in 1:n.sim){
e<-rnorm(n, 0 ,2)
x<-rnorm(n, 0, 1)
y<-0.5 + 2*x + e
model<- lm(y~x)
b0[i]<-coef(model)[1]
b1[i]<-coef(model)[2]
}
hist(b0)
hist(b1)
mean(b0)
mean(b1)
library(ggplot2)
library(dplyr)
setwd('D:/Project/R Scripts/Exploratory-Data-Analysis/Udacity+Facebook')
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
mean_friend_count = mean(friend_count),
median_friend_count = median(as.numeric(friend_count)),
n=n()) %>%
ungroup() %>%
#we need to ungroup to remove age layer to access gender
arrange(age)
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
# Chaining function
pf.fc_by_age_gender <- pf %>%
#filters all na genders
filter(!is.na(gender)) %>%
group_by(age, gender) %>%
summarise(
mean_friend_count = mean(friend_count),
median_friend_count = median(as.numeric(friend_count)),
n=n()) %>%
ungroup() %>%
#we need to ungroup to remove age layer to access gender
arrange(age)
head(pf.fc_by_age_gender)
# Create a line graph showing the
# median friend count over the ages
# for each gender.
ggplot(aes(x = age, y = friend_count),
data = pf.fc_by_age_gender) +
geom_line(aes(color=gender), stat='summary', fun.y=median)
# Create a line graph showing the
# median friend count over the ages
# for each gender.
ggplot(aes(x = age, y = mean_friend_count),
data = pf.fc_by_age_gender) +
geom_line(aes(color=gender), stat='summary', fun.y=median)
# Create a line graph showing the
# median friend count over the ages
# for each gender.
ggplot(aes(x = age, y = median_friend_count),
data = pf.fc_by_age_gender) +
geom_line(aes(color=gender))
pf.fc_by_age_gender.wide <- dcast(pf.fc_by_age_gende,
age ~ gender,
value.var = 'median_friend_count')
head(pf.fc_by_age_gender.wide)
install.packages('reshape2')
library(reshape2)
pf.fc_by_age_gender.wide <- dcast(pf.fc_by_age_gende,
age ~ gender,
value.var = 'median_friend_count')
head(pf.fc_by_age_gender.wide)
pf.fc_by_age_gender.wide <- dcast(pf.fc_by_age_gender,
age ~ gender,
value.var = 'median_friend_count')
head(pf.fc_by_age_gender.wide)
# Plot the ratio of the female to male median
# friend counts using the data frame
# pf.fc_by_age_gender.wide.
ggplot(aes(x=age, y=female/male), data=pf.fc_by_age_gender.wide) +
geom_line()
# Plot the ratio of the female to male median
# friend counts using the data frame
# pf.fc_by_age_gender.wide.
ggplot(aes(x=age, y=female/male), data=pf.fc_by_age_gender.wide) +
geom_hline()
# Plot the ratio of the female to male median
# friend counts using the data frame
# pf.fc_by_age_gender.wide.
ggplot(aes(x=age, y=female/male), data=pf.fc_by_age_gender.wide) +
geom_hline(y=1)
# Plot the ratio of the female to male median
# friend counts using the data frame
# pf.fc_by_age_gender.wide.
ggplot(aes(x=age, y=female/male), data=pf.fc_by_age_gender.wide) +
geom_hline(yintercept=1)
# Plot the ratio of the female to male median
# friend counts using the data frame
# pf.fc_by_age_gender.wide.
ggplot(aes(x=age, y=female/male), data=pf.fc_by_age_gender.wide) +
geom_hline(yintercept=1) +geom_line()
# Plot the ratio of the female to male median
# friend counts using the data frame
# pf.fc_by_age_gender.wide.
ggplot(aes(x=age, y=female/male), data=pf.fc_by_age_gender.wide) +
geom_hline(yintercept=1,linetype=2) +geom_line()
# Create a variable called year_joined
# in the pf data frame using the variable
pf$year_joined <- floor(2014-pf$tenure/365)
